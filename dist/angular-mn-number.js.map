{"version":3,"sources":["mn-passwor/mn-number.directive.js","app.js"],"names":["MnNumberDirective","$compile","$parse","link","scope","element","attributes","dirtyInput","querySelector","removeChild","input","find","isPercentage","getAttribute","value","ngModel","angular","isDefined","attr","event","document","createEvent","initEvent","dispatchEvent","Object","defineProperty","get","console","log","set","configurable","restrict","require","module","$inject","directive"],"mappings":"YAIA,SAASA,mBAAkBC,SAAUC,QAOnC,QAASC,MAAKC,MAAOC,QAASC,YAC5B,GAAMC,YAAaF,QAAQ,GAAGG,cAAc,gBACxCD,aACFF,QAAQ,GAAGI,YAAYF,WAGzB,IAAMG,OAAQL,QAAQM,KAAK,SACrBC,aAAeP,QAAQ,GAAGQ,aAAa,cACvCC,MAAQF,aAC0B,IAApCV,OAAOI,WAAWS,SAASX,OAC3BF,OAAOI,WAAWS,SAASX,MAE3BY,SAAQC,UAAUH,SACpBT,QAAQ,GAAGS,MAAQA,OAGrBJ,MAAMQ,KAAK,WAAYZ,WAAWS,SAClCd,SAASS,OAAON,MAEhB,IAAMe,OAAQC,SAASC,YAAY,aACnCF,OAAMG,UAAU,UAAU,GAAO,GACjCjB,QAAQ,GAAGG,cAAc,SAASe,cAAcJ,OAE5CP,cAEFY,OAAOC,eAAerB,MAAOE,WAAWS,SACtCW,IAD+C,WAG7C,MADAC,SAAQC,IAAI,OACLvB,QAAQ,GAAGS,OAEpBe,IAL+C,SAK3Cf,OACFT,QAAQ,GAAKS,OAEfgB,cAAc,IAvCpB,OACEC,SAAU,IACV5B,KAAAA,KACA6B,QAAS,WCRbhB,QAAQiB,OAAO,gBDCfjC,kBAAkBkC,SAAW,WAAY,UADzClB,QACGiB,OAAO,aACPE,UAAU,WAAYnC","file":"angular-mn-number.js","sourcesContent":["angular\n  .module('mn-number')\n  .directive('mnNumber', MnNumberDirective)\n\nfunction MnNumberDirective($compile, $parse) {\n  return {\n    restrict: 'E',\n    link,\n    require: 'ngModel',\n  }\n\n  function link(scope, element, attributes) {\n    const dirtyInput = element[0].querySelector('input + input')\n    if (dirtyInput) {\n      element[0].removeChild(dirtyInput)\n    }\n\n    const input = element.find('input')\n    const isPercentage = element[0].getAttribute('percentage')\n    const value = isPercentage\n      ? $parse(attributes.ngModel)(scope) * 100\n      : $parse(attributes.ngModel)(scope)\n\n    if (angular.isDefined(value)) {\n      element[0].value = value\n    }\n\n    input.attr('ng-model', attributes.ngModel)\n    $compile(input)(scope)\n\n    const event = document.createEvent('HTMLEvents')\n    event.initEvent('change', false, true)\n    element[0].querySelector('input').dispatchEvent(event)\n\n    if (isPercentage) {\n      // console.log(attributes.ngModel, scope)\n      Object.defineProperty(scope, attributes.ngModel, {\n        get() {\n          console.log('wow')\n          return element[0].value\n        },\n        set(value) {\n          element[0] = value\n        },\n        configurable: true,\n      })\n      // Object.defineProperty(\n      //   scope,\n      //   attributes.ngModel, //\"accessorWrappedMyValue\",\n      //   {\n      //       get : function() { return $scope.myValue; },\n      //       set : function(newValue) {\n      //                 $scope.myValue = newValue;\n      //                 $scope.myDerivedValue = $scope.myValue * 2;\n      //             },\n      //       configurable: true\n      //   })\n\n      // ngModel.$formatters.push(formatter)\n\n      // function formatter(value) {\n      //   console.log('formatter', value / 100)\n\n      //   return value / 100\n      // }\n    }\n\n    // input.on('change', () => {\n    //   const value = element[0].value\n    //   ngModel.$modelValue = value\n    //   ngModel.$viewValue = value\n    //   ngModel.$render()\n    //   console.log(ngModel.$modelValue)\n    // })\n    // console.log(ngModel.$modelValue)\n  }\n}\n","angular.module('mn-number', [])\n"]}